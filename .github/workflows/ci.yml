# GitHub Actions CI Pipeline for XYZ Bank Selenium Tests with Allure Reporting
name: XYZ Bank Test Automation with Allure

# When to run this workflow
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

  #schedule:
    # Run daily at 2 AM UTC for monitoring
    #- cron: '0 2 * * *'

# Define the jobs to run
jobs:
  test:
    name: Run XYZ Bank Selenium Tests
    runs-on: ubuntu-latest

    steps:
      # Step 1: Get the code from repository
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Java 21
      - name: ‚òï Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies (speeds up builds)
      - name: üì¶ Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Step 4: Install Chrome browser (needed for Selenium)
      - name: üåê Install Chrome Browser
        uses: browser-actions/setup-chrome@latest

      # Step 5: Download ChromeDriver automatically
      - name: üöó Setup ChromeDriver
        uses: nanasess/setup-chromedriver@master

      # Step 6: Verify Java and Maven versions
      - name: üîç Verify Environment
        run: |
          echo "Java version:"
          java -version
          echo "Maven version:"
          mvn -version
          echo "Chrome version:"
          google-chrome --version
          echo "ChromeDriver version:"
          chromedriver --version

      # Step 7: Clean and compile the project
      - name: üßπ Clean and Compile
        run: |
          echo "üßπ Cleaning project..."
          mvn clean
          echo "üî® Compiling project..."
          mvn compile test-compile

      # Step 8: Run the Selenium tests
      - name: üß™ Run XYZ Bank Tests
        run: |
          echo "üöÄ Starting XYZ Bank Selenium tests..."
          mvn test -Dheadless=true
        env:
          CHROME_OPTIONS: --headless --no-sandbox --disable-dev-shm-usage --window-size=1920,1080

      # Step 9: Generate Allure Report
      - name: üìä Generate Allure Report
        if: always()
        run: |
          echo "üìä Generating Allure report..."
          mvn allure:report

      # Step 10: Upload Allure Results
      - name: üìã Upload Allure Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ github.run_number }}
          path: |
            target/allure-results/
            target/site/allure-maven-plugin/
          retention-days: 30

      # Step 11: Deploy Allure Report to GitHub Pages
      - name: üöÄ Deploy Allure Report to GitHub Pages
        if: always() && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/site/allure-maven-plugin
          destination_dir: allure-report-${{ github.run_number }}

      # Step 12: Upload Test Results (Surefire)
      - name: üìä Upload Surefire Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: surefire-reports-${{ github.run_number }}
          path: target/surefire-reports/
          retention-days: 30

      # Step 13: Upload Screenshots (if any test failures)
      - name: üì∏ Upload Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failure-screenshots-${{ github.run_number }}
          path: screenshots/
          retention-days: 7

      # Step 14: Generate Test Summary
      - name: üìã Generate Test Summary
        if: always()
        run: |
          echo "## üè¶ XYZ Bank Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Runner:** ${{ runner.os }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Count test results if available
          if [ -f target/surefire-reports/TEST-*.xml ]; then
            TESTS=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -l "testcase" {} \; | wc -l)
            echo "- **Test Classes:** $TESTS" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Add defect tracking info
          echo "## üêõ Defects Under Test" >> $GITHUB_STEP_SUMMARY
          echo "| Defect ID | Priority | Description |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|----------|-------------|" >> $GITHUB_STEP_SUMMARY
          echo "| G2TML-398 | High | Name validation fails to reject numeric characters |" >> $GITHUB_STEP_SUMMARY
          echo "| G2TML-400 | High | Special characters validation bypass |" >> $GITHUB_STEP_SUMMARY
          echo "| G2TML-401 | High | Postal code accepts alphabetic characters |" >> $GITHUB_STEP_SUMMARY
          echo "| G2TML-402 | Medium | Transaction filter Reset button not working |" >> $GITHUB_STEP_SUMMARY
          echo "| G2TML-403 | Critical | Session not terminated after logout |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Add Allure report link if on main branch
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "## üìä Test Reports" >> $GITHUB_STEP_SUMMARY
            echo "- **Allure Report:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report-${{ github.run_number }}/" >> $GITHUB_STEP_SUMMARY
          fi

  # Slack notification job (runs after tests complete)
  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      # Step 1: Send Slack Notification
      - name: üì± Send Slack Notification
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ needs.test.result }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
          text: |
            üè¶ XYZ Bank Tests ${{ needs.test.result == 'success' && '‚úÖ PASSED' || '‚ùå FAILED' }}
            
            üìã Test Details:
            ‚Ä¢ Repository: ${{ github.repository }}
            ‚Ä¢ Branch: ${{ github.ref_name }}
            ‚Ä¢ Commit: ${{ github.sha }}
            ‚Ä¢ Author: ${{ github.actor }}
            ‚Ä¢ Workflow: ${{ github.workflow }}
            
            üêõ Defects Tested:
            ‚Ä¢ Name validation (G2TML-398)
            ‚Ä¢ Special characters bypass (G2TML-400) 
            ‚Ä¢ Postal code validation (G2TML-401)
            ‚Ä¢ Reset button issue (G2TML-402)
            ‚Ä¢ Session security (G2TML-403)
            
            üîó View Results: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Step 2: Send Email Notification
      - name: üìß Send Email Notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üè¶ XYZ Bank Tests ${{ needs.test.result == 'success' && '‚úÖ PASSED' || '‚ùå FAILED' }} - Build #${{ github.run_number }}"
          body: |
            XYZ Bank Selenium Test Results
            
            Status: ${{ needs.test.result == 'success' && '‚úÖ PASSED' || '‚ùå FAILED' }}
            Build: #${{ github.run_number }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            
            Defects Tested:
            - G2TML-398: Name validation fails to reject numeric characters
            - G2TML-400: Special characters validation bypass  
            - G2TML-401: Postal code accepts alphabetic characters
            - G2TML-402: Transaction filter Reset button not working
            - G2TML-403: Session not terminated after logout (CRITICAL)
            
            View detailed results: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            Allure Report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report-${{ github.run_number }}/
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: XYZ Bank Test Automation <${{ secrets.EMAIL_USERNAME }}>

      # Step 3: Show notification status
      - name: üìã Notification Status
        if: always()
        run: |
          echo "## üì± Notification Summary" >> $GITHUB_STEP_SUMMARY
          
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            echo "‚úÖ Slack: Configured and sent" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è Slack: Not configured" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -n "${{ secrets.EMAIL_USERNAME }}" ] && [ -n "${{ secrets.NOTIFICATION_EMAIL }}" ]; then
            echo "‚úÖ Email: Configured and sent" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è Email: Not configured" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "üí° **Setup Instructions:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Add repository secrets for notifications" >> $GITHUB_STEP_SUMMARY
          echo "2. Enable GitHub Pages for Allure reports" >> $GITHUB_STEP_SUMMARY
          echo "3. Configure branch protection rules" >> $GITHUB_STEP_SUMMARY